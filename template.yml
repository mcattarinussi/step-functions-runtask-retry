AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: >-
  A demo project that shows how to implement complex retry logic when using the ECS runTask api in a step function.

Parameters:
  SubnetId:
    Type: String

Resources:
  AppEcsRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: sfn-runtask-retry-app
  AppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      ExecutionRoleArn: !GetAtt AppTaskExecutionRole.Arn
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: ['FARGATE']
      ContainerDefinitions:
        - Name: app
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppEcsRepository}:latest
  AppTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  SfnRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
                - events.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        -
          PolicyName: run-ecs-task
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action: "ecs:RunTask"
                Resource: !Ref AppTaskDefinition
              -
                Effect: Allow
                Action:
                  - "ecs:DescribeTasks"
                  - "ecs:StopTask"
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - "events:PutTargets"
                  - "events:PutRule"
                  - "events:DescribeRule"
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule
        -
          PolicyName: pass-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action: "iam:PassRole"
                Resource: !GetAtt AppTaskExecutionRole.Arn
  Sfn:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Sub: |
          {
            "StartAt": "Run app",
            "States": {
              "Run app": {
                "Type": "Task",
                "Resource": "arn:aws:states:::ecs:runTask.sync",
                "Parameters": {
                  "LaunchType": "FARGATE",
                  "TaskDefinition": "${AppTaskDefinition}",
                  "NetworkConfiguration": {
                      "AwsvpcConfiguration": {
                        "AssignPublicIp": "ENABLED",
                          "Subnets": ["${SubnetId}"]
                      }
                  }
                },
                "Catch": [ {
                  "ErrorEquals": [ "States.TaskFailed" ],
                  "ResultPath": "$.errorInfo",
                  "Next": "RecoveryState"
                }],
                "End": true
              },
              "RecoveryState": {
                "Type": "Pass",
                "End": true
              }
            }
          }
      RoleArn: !GetAtt SfnRole.Arn
      StateMachineName: runtask-complex-retry
